{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ROG\\\\Desktop\\\\cs1300\\\\development\\\\React_Dev\\\\src\\\\CategoryButtons.js\",\n  _s = $RefreshSig$();\nimport \"./App\";\nimport { useState } from \"react\";\nimport bakeryData from \"./bakery-data.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CategoryButtons(_ref) {\n  _s();\n  let {\n    item,\n    filterCategory,\n    setFilter1,\n    setFilter2\n  } = _ref;\n  // function CategoryButtons({item, filterCategory, setList}) {\n  const [bool, setBool] = useState(true);\n  function handleBool() {\n    setBool(!bool);\n  }\n  function handleRemove1(item) {\n    setFilter1(current => current.filter(element => {\n      return element !== item;\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      onClick: () => {\n        if (bool) {\n          setFilter1(current => [...current, item]);\n        } else {\n          handleRemove1(item);\n        }\n        handleBool();\n        filterCategory();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), item]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n\n  // return (\n  //     <div>\n  //         <input type=\"checkbox\" id=\"myCheck\" onClick={() => {\n  //             if (bool) {\n  //                 filterCategory(item);\n  //             } else {\n  //                 setList(bakeryData);\n  //             }\n  //             handleBool();\n  //         }}> \n  //         </input>\n  //         {item}\n  //     </div>\n  // );\n\n  // return (\n  //     <div>\n  //         {categories.map((val) => {\n  //             return (\n  //                 <button onClick={() => {\n  //                     filterCategory(val);\n  //                 }}>\n  //                     {val}\n  //                 </button>\n  //             )\n  //         })}\n  //         <button onClick={() => setList(bakeryData)}>\n  //             All\n  //         </button>\n  //     </div> \n  // );\n}\n_s(CategoryButtons, \"ytNlHbMaZrf73FX8A4yFarKKhw4=\");\n_c = CategoryButtons;\nexport default CategoryButtons;\nvar _c;\n$RefreshReg$(_c, \"CategoryButtons\");","map":{"version":3,"names":["useState","bakeryData","CategoryButtons","item","filterCategory","setFilter1","setFilter2","bool","setBool","handleBool","handleRemove1","current","filter","element"],"sources":["C:/Users/ROG/Desktop/cs1300/development/React_Dev/src/CategoryButtons.js"],"sourcesContent":["import \"./App\";\r\nimport { useState } from \"react\";\r\nimport bakeryData from \"./bakery-data.json\";\r\n\r\nfunction CategoryButtons({item, filterCategory, setFilter1, setFilter2}) {\r\n// function CategoryButtons({item, filterCategory, setList}) {\r\n    const [bool,setBool] = useState(true);\r\n\r\n    function handleBool() {\r\n        setBool(!bool);\r\n    }\r\n\r\n    function handleRemove1(item) {\r\n        setFilter1(current => current.filter(element => {\r\n            return element !== item;\r\n            }),\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"checkbox\" onClick={() => {\r\n                if (bool) {\r\n                    setFilter1(current => [...current, item]);\r\n                } else {\r\n                    handleRemove1(item);\r\n                }\r\n                handleBool();\r\n                filterCategory();\r\n            }}>\r\n            </input>\r\n            {item}\r\n        </div>\r\n    );\r\n\r\n\r\n    // return (\r\n    //     <div>\r\n    //         <input type=\"checkbox\" id=\"myCheck\" onClick={() => {\r\n    //             if (bool) {\r\n    //                 filterCategory(item);\r\n    //             } else {\r\n    //                 setList(bakeryData);\r\n    //             }\r\n    //             handleBool();\r\n    //         }}> \r\n    //         </input>\r\n    //         {item}\r\n    //     </div>\r\n    // );\r\n\r\n\r\n    // return (\r\n    //     <div>\r\n    //         {categories.map((val) => {\r\n    //             return (\r\n    //                 <button onClick={() => {\r\n    //                     filterCategory(val);\r\n    //                 }}>\r\n    //                     {val}\r\n    //                 </button>\r\n    //             )\r\n    //         })}\r\n    //         <button onClick={() => setList(bakeryData)}>\r\n    //             All\r\n    //         </button>\r\n    //     </div> \r\n    // );\r\n}\r\n\r\nexport default CategoryButtons;"],"mappings":";;AAAA,OAAO,OAAO;AACd,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,UAAU,MAAM,oBAAoB;AAAC;AAE5C,SAASC,eAAe,OAAiD;EAAA;EAAA,IAAhD;IAACC,IAAI;IAAEC,cAAc;IAAEC,UAAU;IAAEC;EAAU,CAAC;EACvE;EACI,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAErC,SAASS,UAAU,GAAG;IAClBD,OAAO,CAAC,CAACD,IAAI,CAAC;EAClB;EAEA,SAASG,aAAa,CAACP,IAAI,EAAE;IACzBE,UAAU,CAACM,OAAO,IAAIA,OAAO,CAACC,MAAM,CAACC,OAAO,IAAI;MAC5C,OAAOA,OAAO,KAAKV,IAAI;IACvB,CAAC,CAAC,CACL;EACL;EAEA,oBACI;IAAA,wBACI;MAAO,IAAI,EAAC,UAAU;MAAC,OAAO,EAAE,MAAM;QAClC,IAAII,IAAI,EAAE;UACNF,UAAU,CAACM,OAAO,IAAI,CAAC,GAAGA,OAAO,EAAER,IAAI,CAAC,CAAC;QAC7C,CAAC,MAAM;UACHO,aAAa,CAACP,IAAI,CAAC;QACvB;QACAM,UAAU,EAAE;QACZL,cAAc,EAAE;MACpB;IAAE;MAAA;MAAA;MAAA;IAAA,QACM,EACPD,IAAI;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;;EAIV;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;AAAC,GAhEQD,eAAe;AAAA,KAAfA,eAAe;AAkExB,eAAeA,eAAe;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}